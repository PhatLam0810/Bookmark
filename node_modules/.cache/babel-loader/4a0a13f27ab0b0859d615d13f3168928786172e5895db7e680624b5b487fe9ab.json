{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T\\\\Desktop\\\\FE\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BookmarkButton from './BookmarkButton';\nimport FavoriteList from './FavoriteList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [stories, setStories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Hàm fetchStories dùng để gọi API và lấy danh sách truyện\n    const fetchStories = async () => {\n      try {\n        const response = await fetch('https://api.nettruyenmax.info/sitemap-mangas/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setStories(data); // Lưu danh sách truyện vào state\n        setLoading(false); // Đã load xong\n      } catch (error) {\n        setError(error.message);\n        setLoading(false); // Đã load xong (có lỗi)\n      }\n    };\n    fetchStories(); // Gọi hàm fetchStories khi component mount\n  }, []); // Chỉ gọi một lần khi component mount\n\n  const handleToggleFavorite = () => {\n    // Có thể xử lý gì đó nếu cần thiết khi thay đổi yêu thích\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Danh s\\xE1ch Truy\\u1EC7n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stories.map(story => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [story.name, /*#__PURE__*/_jsxDEV(BookmarkButton, {\n          story: story,\n          onToggleFavorite: handleToggleFavorite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, story.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FavoriteList, {\n      onUpdateFavorite: handleToggleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nmfpHWHS2sFiJb7FTRRnO9TKtZY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BookmarkButton","FavoriteList","jsxDEV","_jsxDEV","App","_s","stories","setStories","loading","setLoading","error","setError","fetchStories","response","fetch","ok","Error","data","json","message","handleToggleFavorite","children","fileName","_jsxFileName","lineNumber","columnNumber","map","story","name","onToggleFavorite","id","onUpdateFavorite","_c","$RefreshReg$"],"sources":["C:/Users/T/Desktop/FE/src/app.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BookmarkButton from './BookmarkButton';\r\nimport FavoriteList from './FavoriteList';\r\n\r\nconst App = () => {\r\n  const [stories, setStories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Hàm fetchStories dùng để gọi API và lấy danh sách truyện\r\n    const fetchStories = async () => {\r\n      try {\r\n        const response = await fetch('https://api.nettruyenmax.info/sitemap-mangas/');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const data = await response.json();\r\n        setStories(data); // Lưu danh sách truyện vào state\r\n        setLoading(false); // Đã load xong\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false); // Đã load xong (có lỗi)\r\n      }\r\n    };\r\n\r\n    fetchStories(); // Gọi hàm fetchStories khi component mount\r\n\r\n  }, []); // Chỉ gọi một lần khi component mount\r\n\r\n  const handleToggleFavorite = () => {\r\n    // Có thể xử lý gì đó nếu cần thiết khi thay đổi yêu thích\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Danh sách Truyện</h2>\r\n      <ul>\r\n        {stories.map(story => (\r\n          <li key={story.id}>\r\n            {story.name}\r\n            <BookmarkButton\r\n              story={story}\r\n              onToggleFavorite={handleToggleFavorite}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <hr />\r\n      <FavoriteList onUpdateFavorite={handleToggleFavorite} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}