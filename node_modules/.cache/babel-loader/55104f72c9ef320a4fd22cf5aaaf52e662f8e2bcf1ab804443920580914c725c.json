{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T\\\\Desktop\\\\FE\\\\src\\\\BookmarkButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookmarkButton = ({\n  story,\n  onToggleFavorite\n}) => {\n  _s();\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  // Kiểm tra xem story đã được bookmark hoặc favorite chưa\n  const checkIsFavorite = () => {\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    return favorites.some(item => item.id === story.id);\n  };\n  const handleFavorite = () => {\n    let favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    if (isFavorite) {\n      favorites = favorites.filter(item => item.id !== story.id);\n      setIsFavorite(false);\n    } else {\n      favorites.push({\n        id: story.id,\n        name: story.name\n      });\n      setIsFavorite(true);\n    }\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n\n    // Gọi hàm callback để thông báo cho App component biết rằng có sự thay đổi yêu thích\n    onToggleFavorite();\n  };\n\n  // Cập nhật trạng thái yêu thích khi component được render hoặc khi favorites thay đổi\n  useEffect(() => {\n    setIsFavorite(checkIsFavorite());\n  }, [story, onToggleFavorite]); // Thêm story và onToggleFavorite vào dependency để cập nhật lại khi có thay đổi\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleFavorite,\n    children: isFavorite ? 'Remove Favorite' : 'Add Favorite'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(BookmarkButton, \"lh6fxD9+vLbuebOO0x4Y5WwBqk4=\");\n_c = BookmarkButton;\nexport default BookmarkButton;\nvar _c;\n$RefreshReg$(_c, \"BookmarkButton\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BookmarkButton","story","onToggleFavorite","_s","isFavorite","setIsFavorite","checkIsFavorite","favorites","JSON","parse","localStorage","getItem","some","item","id","handleFavorite","filter","push","name","setItem","stringify","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/T/Desktop/FE/src/BookmarkButton.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst BookmarkButton = ({ story, onToggleFavorite }) => {\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n\r\n  // Kiểm tra xem story đã được bookmark hoặc favorite chưa\r\n  const checkIsFavorite = () => {\r\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    return favorites.some(item => item.id === story.id);\r\n  };\r\n\r\n  const handleFavorite = () => {\r\n    let favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n\r\n    if (isFavorite) {\r\n      favorites = favorites.filter(item => item.id !== story.id);\r\n      setIsFavorite(false);\r\n    } else {\r\n      favorites.push({ id: story.id, name: story.name });\r\n      setIsFavorite(true);\r\n    }\r\n\r\n    localStorage.setItem('favorites', JSON.stringify(favorites));\r\n\r\n    // Gọi hàm callback để thông báo cho App component biết rằng có sự thay đổi yêu thích\r\n    onToggleFavorite();\r\n  };\r\n\r\n  // Cập nhật trạng thái yêu thích khi component được render hoặc khi favorites thay đổi\r\n  useEffect(() => {\r\n    setIsFavorite(checkIsFavorite());\r\n  }, [story, onToggleFavorite]); // Thêm story và onToggleFavorite vào dependency để cập nhật lại khi có thay đổi\r\n\r\n  return (\r\n    <button onClick={handleFavorite}>\r\n      {isFavorite ? 'Remove Favorite' : 'Add Favorite'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BookmarkButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IACrE,OAAOJ,SAAS,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKb,KAAK,CAACa,EAAE,CAAC;EACrD,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIR,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAEnE,IAAIP,UAAU,EAAE;MACdG,SAAS,GAAGA,SAAS,CAACS,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKb,KAAK,CAACa,EAAE,CAAC;MAC1DT,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,MAAM;MACLE,SAAS,CAACU,IAAI,CAAC;QAAEH,EAAE,EAAEb,KAAK,CAACa,EAAE;QAAEI,IAAI,EAAEjB,KAAK,CAACiB;MAAK,CAAC,CAAC;MAClDb,aAAa,CAAC,IAAI,CAAC;IACrB;IAEAK,YAAY,CAACS,OAAO,CAAC,WAAW,EAAEX,IAAI,CAACY,SAAS,CAACb,SAAS,CAAC,CAAC;;IAE5D;IACAL,gBAAgB,CAAC,CAAC;EACpB,CAAC;;EAED;EACAL,SAAS,CAAC,MAAM;IACdQ,aAAa,CAACC,eAAe,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,CAACL,KAAK,EAAEC,gBAAgB,CAAC,CAAC,CAAC,CAAC;;EAE/B,oBACEH,OAAA;IAAQsB,OAAO,EAAEN,cAAe;IAAAO,QAAA,EAC7BlB,UAAU,GAAG,iBAAiB,GAAG;EAAc;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEb,CAAC;AAACvB,EAAA,CApCIH,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAsCpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}